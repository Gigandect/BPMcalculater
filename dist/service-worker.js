const CACHE_NAME="bpm-calculator-cache-v1.0.0",urlsToCache=["/BPMcalculater/","/BPMcalculater/index.html","/BPMcalculater/manifest.webmanifest","/BPMcalculater/service-worker.js","/BPMcalculater/icons/icon-192x192.png","/BPMcalculater/icons/icon-512x512.png","/BPMcalculater/icons/icon-maskable-192x192.png","/BPMcalculater/icons/icon-maskable-512x512.png"];self.addEventListener("install",(e=>{console.log("[Service Worker] Installing..."),e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log("[Service Worker] Caching app shell"),e.addAll(urlsToCache)))).catch((e=>{console.error("[Service Worker] Cache addAll failed:",e)}))),self.skipWaiting()})),self.addEventListener("activate",(e=>{console.log("[Service Worker] Activating..."),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return console.log("[Service Worker] Deleting old cache:",e),caches.delete(e)}))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(e=>{"navigate"!==e.request.mode?e.respondWith(caches.match(e.request).then((c=>c?(console.log("[Service Worker] Serving from cache:",e.request.url),c):(console.log("[Service Worker] Fetching from network:",e.request.url),fetch(e.request).then((c=>{if(c&&200===c.status&&"basic"===c.type){const r=c.clone();caches.open(CACHE_NAME).then((c=>{c.put(e.request,r)}))}return c}))))).catch((c=>{console.error("[Service Worker] Fetch failed and no cache match for:",e.request.url,c)}))):e.respondWith(fetch(e.request).catch((()=>caches.match("/BPMcalculater/index.html"))))}));